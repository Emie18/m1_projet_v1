{# #######################################################################
# Nom du fichier: form.html.twig
# Description: Afficher le formu:aire pour le filtre
# Auteurs: Emilie Le Rouzic, Thibault Tanné
# Date de création: avril 2024
# Version: 1.0
####################################################################### #}
<script src="{{ asset('js/filtrage.js') }}"></script>
<form id="filterForm">
	<label for="nom">Apprenant</label>
  <input type="text" placeholder="Apprenant" id="inputNom" list="dataList" onKeyUp="autoComplete(event)">
  <datalist id="dataList">
  </datalist>

	<label for="groupe">Groupe :</label>

	<select name="groupe" id="groupeInput">
		<option value="">groupe</option>
		{% for groupe in groupes %}
			<option value="{{ groupe.id }}">{{groupe.libelle}}</option>
		{% endfor %}
	</select><br>

	<label for="etat_stage">État du stage :</label>
	<select name="etat_stage" id="etatInput">
		<option value="">Etat du stage</option>
		{% for etat in etats_stages %}
			<option value="{{ etat.id }}">{{ etat.libelle }}</option>
		{% endfor %}
	</select><br>

	<label for="annee">Année :</label>
	<select name="annee" id="anneeInput">
		<option value="">Année</option>
		{% for annee in annees %}
			<option value="{{ annee }}">{{ annee }}</option>
		{% endfor %}
	</select><br>

	<label for="professeur">Professeur :</label>
  <input type="text" placeholder="Professeur" id="inputProf" list="dataList" onKeyUp="autoComplete(event)">
	<button type="button" onclick="filterResults()">Filtrer</button>
	<button class="croix" type="button" onclick="defiltrer()">✕</button>
</form>
<script>
function autoComplete(event){
  const input = event.target;
  const inputValue = input.value;
  if(inputValue.length >= 3){
    var url = "/autocomplete?filtre="+input.id+"&val="+inputValue;
    console.log(url)
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function(){
        if(this.status == 200){
          
          const suggestionList = document.getElementById("dataList");
          //vider la liste
          suggestionList.innerHTML = "";
          suggestionList.setAttribute("element", "apprenant")
          if(this.responseText != ""){
            console.log(this.responseText)
            var result = JSON.parse(this.responseText);
            result.forEach(function(item){
              const option = document.createElement("option");
              switch(input.id){
                case "inputNom": case "inputProf":
                  var name = item.nom + " " + item.prenom;
                  option.value = name;
                  break;
                case "inputGroupe":
                  option.value = item.libelle;
                  break;
              }

              
              option.setAttribute("data-id", item.id)
              suggestionList.appendChild(option)
          })

          }

        }
      }
      xhttp.open("GET", url, true)
      xhttp.send();
  } 
}

document.addEventListener('click', function(event) {
    const autocompleteList = document.getElementById('autocompleteList');
    const id = event.target;
    if (autocompleteList && event.target !== autocompleteList && event.target.parentNode !== autocompleteList) {
        autocompleteList.parentNode.removeChild(autocompleteList);
    }
    datalist = document.getElementById("dataList");
    while(datalist.hasChildNodes()){
      datalist.removeChild(datalist.firstChild);
    }
});



</script>
